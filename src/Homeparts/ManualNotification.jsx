import React, { useEffect } from 'react';
import { useSelector } from 'react-redux';
import FirebaseNotification from '../FireBase/MessageAndNotification/Notification'; // โ ุบููุฑูุง ุงูุงุณู ูุชุฌูุจ ุงูุชุนุงุฑุถ

const ManualNotification = () => {
  const user = useSelector((state) => state.auth.user);

  useEffect(() => {
    // โ ุชุฃูุฏู ุฅู ุงูุฅุฐู ููุฅุดุนุงุฑุงุช ููุฌูุฏ
    if ('Notification' in window && window.Notification.permission !== 'granted') {
      window.Notification.requestPermission().then((permission) => {
        if (permission === 'granted') {
          console.log('โ ุชู ุชูุนูู ุงูุฅุดุนุงุฑุงุช ูู ุงููุณุชุฎุฏู');
        } else {
          console.warn('๐ซ ูู ูุชู ุชูุนูู ุงูุฅุดุนุงุฑุงุช');
        }
      });
    }
  }, []);
  
  useEffect(() => {
    if (user?.id && window.Notification.permission === 'granted') {
      const unsubscribe = FirebaseNotification.subscribeToUserNotifications(user.id, (notifications) => {
        console.log('๐ ุฅุดุนุงุฑ ุฌุฏูุฏ:', notifications);

        if (notifications.length > 0) {
          const latest = notifications[0];
          new window.Notification(latest.title || '๐ข ุฅุดุนุงุฑ ุฌุฏูุฏ', {
            body: latest.body || '',
            icon: '/1.png',
          });
        }
      });

      return () => unsubscribe();
    }
  }, [user]);

  const handleSendNotification = () => {
    console.log('๐ ุชู ุงูุถุบุท ุนูู ุงูุฒุฑ');
    if (window.Notification.permission === 'granted') {
      new window.Notification('๐ฃ ุฅุดุนุงุฑ ูุจุงุดุฑ ูู ุงูุฒุฑ', {
        body: 'ูุฐุง ุฅุดุนุงุฑ ุธูุฑ ูู ููุฏ ุงูุฌุงูุงุณูุฑุจุช ูุจุงุดุฑุฉ!',
        icon: '/1.png',
      });
    } else {
      console.warn('โ ูู ูุชู ููุญ ุตูุงุญูุฉ ุงูุฅุดุนุงุฑุงุช');
    }
  };

  return (
    <button onClick={handleSendNotification}>
      ๐ ุฅุฑุณุงู ุฅุดุนุงุฑ ูุฏูู
    </button>
  );
};

export default ManualNotification;
